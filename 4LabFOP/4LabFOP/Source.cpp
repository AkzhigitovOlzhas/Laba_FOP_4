#include<iostream>
using namespace std;
//ПЕРВОЕ ЗАДАНИЕ
//Напишите программу, которая использует шаблон функции
//maximum для поиска максимального из трех целых чисел, трех чисел с
//плавающей запятой и трех символов.
template<class T>
T maximum(T n, T n1, T n2) {
	if (n > n1&&n > n2) {
		return n;
	}
	else if (n1 > n&&n1 > n2) {
		return n1;
	}
	else if (n2 > n&&n2 > n1) {
		return n2;
	}
	else {
		return 0;
	}
}

//ВТОРОЕ ЗАДАНИЕ
//Напишите программу, которая использует шаблон функции по
//имени min для определения наименьшего из трех аргументов.Проверьте
//программу, используя пары целых чисел, символов и чисел с плавающей
//запятой.
template<class T>
T min(T n, T n1, T n2) {
	if (n < n1&&n < n2) {
		return n;
	}
	else if (n1 < n&&n1 < n2) {
		return n1;
	}
	else if (n2 < n&&n2 < n1) {
		return n2;
	}
	else {
		return 0;
	}
}

//ТРЕТЬЕ ЗАДАНИЕ
//Определите, содержат ли следующие фрагменты программы
//ошибки.Для каждой ошибки укажите, как она может быть исправлена.
//Замечание: в некоторых фрагментах ошибки могут отсутствовать.
//	a)  template < class A >
//	int sum(int numl, int num2, int num3)
//	{
//	return numl + num2 + num3; )		<--- Неправильно раставлены скобки нужно вместо этого ')' такую скобку '}'

//	b) void printResults(int x, int y)
//	{
//		cout « "Сумма равна " « x + у « ' \n';
//		return x + y;					<--- Функция не должна возвращать значение
//	}

//	c) template < class A>
//	A product(A numl, A num2, A num3)
//	{
//		return  numl * num2 * num3;
//	}
//double cube(int);				 
//int cube(int);						<--- Неправильно перезагруженна функция

//ЗАДАНИЕ ЧЕТЫРЕ
//4. Ряд Фибонначи состоит из чисел, каждое из которых является
//суммой двух предыдущих(1, 1, 2, 3, 5, 8, 13, …).Найти n - ный элемент ряда,
//используя рекурсию.
int fibonachi(int n) {
	if (n < 2) {
		return n;
	}
	else {
		return fibonachi(n-2) + fibonachi(n-1);
	}
}


//ЗАДАНИЕ ПЯТЬ
//5. Наибольший общий делитель(НОД) двух целых чисел х и у — это
//наибольшее целое, на которое без остатка делится каждое из двух чисел.
//Напишите рекурсивную функцию nod, которая возвращает наибольший
//общий делитель чисел х и у.НОД для х и у определяется рекурсивно
//следующим образом : если у равно 0, то nod(x, у)  возвращает х; в противном
//случае nod(x, у) равняется nod(y, х % у), где %  — это операция вычисления
//остатка.
int NOD(int x, int y) {
	if (y == 0) {
		return x;
	}
	else {
		NOD(y, x%y);
	}
}

int main() {
	setlocale(LC_ALL, "rus");
	//ПЕРВОЕ ЗАДАНИЕ
	//cout << maximum(5, 4, 7) << endl;

	//ВТОРОЕ ЗАДАНИЕ
	//cout << min(5, 1, 2) << endl;

	//ЗАДАНИЕ ЧЕТЫРЕ
	/*int k=0;
	cout << "Введите число n: " << endl; cin >> k;
	cout << fibonachi(k) << endl;*/

	//ЗАДАНИЕ ПЯТЬ
	/*int a, b;
	cout << "Введите два числа: " << endl;
	cin >> a >> b;
	cout <<"НОД: "<< NOD(a, b) << endl;*/

	system("pause");
	return 0;
}